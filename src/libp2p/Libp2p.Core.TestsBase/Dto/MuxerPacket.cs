// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MuxerPacket.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nethermind.Libp2p.Core.TestsBase.Dto {

  /// <summary>Holder for reflection information generated from MuxerPacket.proto</summary>
  public static partial class MuxerPacketReflection {

    #region Descriptor
    /// <summary>File descriptor for MuxerPacket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MuxerPacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFNdXhlclBhY2tldC5wcm90byJhCgtNdXhlclBhY2tldBIeCgRUeXBlGAEg",
            "AigOMhAuTXV4ZXJQYWNrZXRUeXBlEhEKCUNoYW5uZWxJZBgCIAIoDRIMCgRE",
            "YXRhGAQgASgMEhEKCVByb3RvY29scxgDIAMoCSpYCg9NdXhlclBhY2tldFR5",
            "cGUSFAoQTmV3U3RyZWFtUmVxdWVzdBAAEhUKEU5ld1N0cmVhbVJlc3BvbnNl",
            "EAESCAoERGF0YRACEg4KCkNsb3NlV3JpdGUQA0InqgIkTmV0aGVybWluZC5M",
            "aWJwMnAuQ29yZS5UZXN0c0Jhc2UuRHRv"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacket), global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacket.Parser, new[]{ "Type", "ChannelId", "Data", "Protocols" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MuxerPacketType {
    [pbr::OriginalName("NewStreamRequest")] NewStreamRequest = 0,
    [pbr::OriginalName("NewStreamResponse")] NewStreamResponse = 1,
    [pbr::OriginalName("Data")] Data = 2,
    [pbr::OriginalName("CloseWrite")] CloseWrite = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MuxerPacket : pb::IMessage<MuxerPacket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MuxerPacket> _parser = new pb::MessageParser<MuxerPacket>(() => new MuxerPacket());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MuxerPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MuxerPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MuxerPacket(MuxerPacket other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      channelId_ = other.channelId_;
      data_ = other.data_;
      protocols_ = other.protocols_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MuxerPacket Clone() {
      return new MuxerPacket(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketType TypeDefaultValue = global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketType.NewStreamRequest;

    private global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "Type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ChannelId" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 2) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "ChannelId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ChannelId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 4;
    private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "Data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "Protocols" field.</summary>
    public const int ProtocolsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_protocols_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> protocols_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Protocols {
      get { return protocols_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MuxerPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MuxerPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ChannelId != other.ChannelId) return false;
      if (Data != other.Data) return false;
      if(!protocols_.Equals(other.protocols_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (HasData) hash ^= Data.GetHashCode();
      hash ^= protocols_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasChannelId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChannelId);
      }
      protocols_.WriteTo(output, _repeated_protocols_codec);
      if (HasData) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasChannelId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChannelId);
      }
      protocols_.WriteTo(ref output, _repeated_protocols_codec);
      if (HasData) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      size += protocols_.CalculateSize(_repeated_protocols_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MuxerPacket other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      protocols_.Add(other.protocols_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketType) input.ReadEnum();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 26: {
            protocols_.AddEntriesFrom(input, _repeated_protocols_codec);
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Nethermind.Libp2p.Core.TestsBase.Dto.MuxerPacketType) input.ReadEnum();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 26: {
            protocols_.AddEntriesFrom(ref input, _repeated_protocols_codec);
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
